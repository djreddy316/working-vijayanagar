{"ast":null,"code":"var _jsxFileName = \"D:\\\\vijayanagar-working\\\\working-vijayanagar\\\\src\\\\components\\\\YardManagement\\\\index.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport Table from \"../YardManagement/userTable\";\nimport AddYardForm from \"../YardManagement/AddYardForm\";\nimport { ManagementSection, BannerHeading } from \"./styles\";\nimport Panel from \"../common/panel\";\nimport Redirect from \"react-router-dom\";\nimport { selectYard } from \"../../modals/YardManagement/selectors\";\nimport { YardSetNameFilter } from \"../../modals/YardManagement/actions\";\nimport { fetchYard, deleteYard, addYard, updateYard } from \"../../modals/YardManagement/thunk\";\n/* import {\r\n    appSelectFilteredUsers,\r\n} from \"../../modals/app/selectors\"; */\n//import { appSelectFilteredZones } from \"../../modals/app/selectors\";\n\nclass YardManagement extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      panelOpenType: \"\",\n      activeUser: null\n    };\n\n    this.toggleUserPanel = panelOpenType => {\n      console.log(\"panel function inside ==>\");\n      this.setState({\n        panelOpenType\n      });\n      console.log('Panel Open Type :', panelOpenType);\n    };\n\n    this.editYard = yard => {\n      this.setState({\n        panelOpenType: \"edit\",\n        activeUser: yard\n      });\n    };\n\n    this.handleDelete = status => {\n      this.setState({\n        showconfirmation: status\n      });\n    };\n\n    this.confirmDelete = yard => {\n      const {\n        deleteYard\n      } = this.props;\n      deleteYard(yard);\n      this.handleDelete(false);\n    };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    console.log(error, errorInfo, \"==>\");\n  }\n\n  componentDidMount() {\n    //    console.log('Api call started Here>');\n    const {\n      fetchYard\n    } = this.props;\n    fetchYard(); //   console.log('Here==========================>');\n  }\n\n  render() {\n    if (localStorage.getItem(\"role_id\") == undefined) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 16\n        }\n      });\n    }\n\n    const {\n      panelOpenType,\n      activeUser\n    } = this.state;\n    const {\n      addYard,\n      deleteYard,\n      updateYard,\n      yards,\n      setSearchFilter\n    } = this.props;\n    console.log(\"yard :\", yards);\n    return /*#__PURE__*/React.createElement(ManagementSection, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BannerHeading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, \"Yard Management\"), /*#__PURE__*/React.createElement(Table, {\n      action: this.toggleUserPanel,\n      rowData: yards.yard,\n      requiredElements: [\"name\", \"description\", \"latitude\", \"longitude\", \"radius\"],\n      columnsElements: [\"Yard Name\", \"Description\", \"Latitude\", \"Longitude\", \"Radius(in mts)\"],\n      panelType: panelOpenType,\n      editYard: this.editYard,\n      deleteYard: this.confirmDelete,\n      setSearchFilter: setSearchFilter,\n      perPage: 10,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Panel, {\n      panelType: panelOpenType,\n      isPanelOpen: Boolean(panelOpenType),\n      Heading: panelOpenType === \"edit\" ? \"Update Yard details\" : panelOpenType === \"add\" ? \"Add Yard\" : panelOpenType === \"searchBy\" ? \"Search By\" : null,\n      closeAction: this.toggleUserPanel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }\n    }, panelOpenType && /*#__PURE__*/React.createElement(AddYardForm, {\n      cancelAction: this.toggleUserPanel,\n      addYard: addYard,\n      deleteYard: deleteYard,\n      preLoadedValues: activeUser,\n      isEditing: panelOpenType === \"edit\",\n      updateYard: updateYard,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 25\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  yards: selectYard(state)\n});\n\nconst mapDispatchToProps = {\n  addYard: addYard,\n  updateYard: updateYard,\n  fetchYard: fetchYard,\n  deleteYard: deleteYard,\n  setSearchFilter: YardSetNameFilter\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(YardManagement);","map":{"version":3,"sources":["D:/vijayanagar-working/working-vijayanagar/src/components/YardManagement/index.js"],"names":["React","Component","connect","Table","AddYardForm","ManagementSection","BannerHeading","Panel","Redirect","selectYard","YardSetNameFilter","fetchYard","deleteYard","addYard","updateYard","YardManagement","state","panelOpenType","activeUser","toggleUserPanel","console","log","setState","editYard","yard","handleDelete","status","showconfirmation","confirmDelete","props","componentDidCatch","error","errorInfo","componentDidMount","render","localStorage","getItem","undefined","yards","setSearchFilter","Boolean","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Table from \"../YardManagement/userTable\";\r\nimport AddYardForm from \"../YardManagement/AddYardForm\"\r\nimport { ManagementSection, BannerHeading } from \"./styles\";\r\nimport Panel from \"../common/panel\";\r\nimport Redirect from \"react-router-dom\";\r\nimport { selectYard} from \"../../modals/YardManagement/selectors\";\r\nimport { YardSetNameFilter } from \"../../modals/YardManagement/actions\";\r\nimport {\r\n    fetchYard,\r\n    deleteYard,\r\n    addYard,\r\n    updateYard,\r\n} from \"../../modals/YardManagement/thunk\";\r\n/* import {\r\n    appSelectFilteredUsers,\r\n} from \"../../modals/app/selectors\"; */\r\n//import { appSelectFilteredZones } from \"../../modals/app/selectors\";\r\n\r\n\r\nclass YardManagement extends Component {\r\n    state = {\r\n        panelOpenType: \"\",\r\n        activeUser: null,\r\n    };\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo, \"==>\");\r\n    }\r\n\r\n    componentDidMount() {\r\n    //    console.log('Api call started Here>');\r\n        const { fetchYard } = this.props;\r\n        fetchYard();\r\n     //   console.log('Here==========================>');\r\n    }\r\n\r\n    toggleUserPanel = (panelOpenType) => {\r\n        console.log(\"panel function inside ==>\");\r\n        this.setState({ panelOpenType });\r\n        console.log('Panel Open Type :', panelOpenType);\r\n    };\r\n\r\n    editYard = (yard) => {\r\n        this.setState({ panelOpenType: \"edit\", activeUser: yard });\r\n    };\r\n\r\n    handleDelete = (status) => {\r\n        this.setState({ showconfirmation: status });\r\n    };\r\n\r\n    confirmDelete = (yard) => {\r\n        const { deleteYard } = this.props;\r\n        deleteYard(yard);\r\n        this.handleDelete(false);\r\n    };\r\n\r\n    render() {\r\n        if(localStorage.getItem(\"role_id\")  == undefined)\r\n      {\r\n        return <Redirect to='/login'  /> \r\n      }\r\n        const { panelOpenType, activeUser } = this.state;\r\n        const {\r\n            addYard,\r\n            deleteYard,\r\n            updateYard,\r\n            yards,\r\n            setSearchFilter,\r\n        } = this.props;\r\n        console.log(\"yard :\" ,yards );\r\n        return (\r\n            <ManagementSection>\r\n                <BannerHeading>Yard Management</BannerHeading>\r\n                <Table\r\n                    action={this.toggleUserPanel}\r\n                    rowData={yards.yard}\r\n\r\n                    requiredElements={[\r\n                        \"name\",\r\n                        \"description\",\r\n                        \"latitude\",\r\n                        \"longitude\",\r\n                        \"radius\"\r\n\r\n                    ]}\r\n                    columnsElements={[\r\n                        \"Yard Name\",\r\n                        \"Description\",\r\n                        \"Latitude\",\r\n                        \"Longitude\",\r\n                        \"Radius(in mts)\"                     \r\n                    ]}\r\n                    panelType={panelOpenType}\r\n                    editYard={this.editYard}\r\n                    deleteYard={this.confirmDelete}\r\n                    setSearchFilter={setSearchFilter}\r\n                    perPage={10}\r\n                />\r\n                <Panel\r\n                    panelType={panelOpenType}\r\n                    isPanelOpen={Boolean(panelOpenType)}\r\n                    Heading={\r\n                        panelOpenType === \"edit\"\r\n                            ? \"Update Yard details\"\r\n                            : panelOpenType === \"add\"\r\n                                ? \"Add Yard\"\r\n                                : panelOpenType === \"searchBy\"\r\n                                    ? \"Search By\"\r\n                                    : null\r\n                    }\r\n                    closeAction={this.toggleUserPanel}\r\n                >\r\n\r\n                    {panelOpenType && (\r\n                        <AddYardForm\r\n                            cancelAction={this.toggleUserPanel}\r\n                            addYard={addYard}\r\n                            deleteYard={deleteYard}\r\n                            preLoadedValues={activeUser}\r\n                            isEditing={panelOpenType === \"edit\"}\r\n                            updateYard={updateYard}\r\n                        />\r\n                    )}\r\n                </Panel>\r\n            </ManagementSection>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    yards: selectYard(state),\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    addYard: addYard,\r\n    updateYard: updateYard,\r\n    fetchYard: fetchYard,\r\n    deleteYard: deleteYard,\r\n    setSearchFilter: YardSetNameFilter,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(YardManagement);\r\n"]},"metadata":{},"sourceType":"module"}