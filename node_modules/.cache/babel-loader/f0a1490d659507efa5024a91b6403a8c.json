{"ast":null,"code":"var _jsxFileName = \"D:\\\\vijayanagar-working\\\\working-vijayanagar\\\\src\\\\components\\\\file-upload\\\\excel-reader.js\";\nimport React, { Component } from 'react'; //import { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n//import { DefaultButton } from 'office-ui-fabric-react/lib/Button';\n\nimport XLSX from 'xlsx';\nimport { make_cols } from './make-columns';\nimport { SheetJSFT } from './types';\nimport { connect } from \"react-redux\"; //import {Dashboard} from \"../assignment/assignment\";\n//import {appSelectFilteredZones, appSelectNotifications} from \"../../modals/app/selectors\";\n//import {appFetchAllEquipments, appFetchZonesData, zoneFecthWIPdetails, zoneScheduleWIP} from \"../../modals/app/thunk\";\n//import {appSetZonesFilter} from \"../../modals/app/actions\";\n\nimport { addRoasters, fetchRoasters } from \"../../modals/roaster/roaster-service\";\nimport axios from 'axios';\nimport { appShowPushNotification } from \"../../modals/app/thunk\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass ExcelReader extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      file: {},\n      data: [],\n      cols: []\n    };\n    this.handleFile = this.handleFile.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.addRoaster = this.addRoaster.bind(this);\n    this.notify = this.notify.bind(this);\n  }\n\n  notify() {\n    toast(\"Please select a file !\");\n  }\n\n  addRoaster(data) {\n    axios.post('https://xlnlyl43dd.execute-api.ap-south-1.amazonaws.com/dev/addroster', data).then(resp => {\n      console.log(resp.data);\n    });\n  }\n\n  handleChange(e) {\n    const files = e.target.files;\n    if (files && files[0]) this.setState({\n      file: files[0]\n    });\n  }\n\n  handleFile() {\n    if (this.state.file.length > 0) {\n      /* Boilerplate to set up FileReader */\n      const reader = new FileReader();\n      const rABS = !!reader.readAsBinaryString;\n\n      reader.onload = e => {\n        /* Parse data */\n        const bstr = e.target.result;\n        const wb = XLSX.read(bstr, {\n          type: rABS ? 'binary' : 'array',\n          bookVBA: true\n        });\n        /* Get first worksheet */\n\n        const wsname = wb.SheetNames[0];\n        const ws = wb.Sheets[wsname];\n        /* Convert array of arrays */\n\n        const data = XLSX.utils.sheet_to_json(ws);\n        /* Update state */\n\n        this.setState({\n          data: data,\n          cols: make_cols(ws['!ref'])\n        }, () => {\n          /* console.log('FUN ', JSON.stringify(this.state.data, null, 2));\n          addRoasters(JSON.stringify(this.state.data, null, 2));*/\n          this.addRoaster(JSON.stringify(this.state.data, null, 2));\n          console.log('FUN ', JSON.stringify(this.state.data, null, 2));\n        });\n      };\n\n      if (rABS) {\n        reader.readAsBinaryString(this.state.file);\n      } else {\n        reader.readAsArrayBuffer(this.state.file);\n      }\n\n      ;\n    } else {\n      this.notify();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        color: \"black\",\n        width: \"20%\",\n        marginLeft: \"60%\",\n        marginTop: \"0px\"\n      },\n      type: \"file\",\n      className: \"form-control\",\n      id: \"file\",\n      accept: SheetJSFT,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      style: {\n        marginLeft: \"85%\",\n        marginTop: \"-35px\"\n      },\n      type: \"submit\",\n      value: \"Submit\",\n      onClick: this.handleFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(ToastContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({});\n\nconst mapDispatchToProps = {\n  fetchRoasters: fetchRoasters\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ExcelReader);","map":{"version":3,"sources":["D:/vijayanagar-working/working-vijayanagar/src/components/file-upload/excel-reader.js"],"names":["React","Component","XLSX","make_cols","SheetJSFT","connect","addRoasters","fetchRoasters","axios","appShowPushNotification","ToastContainer","toast","ExcelReader","constructor","props","state","file","data","cols","handleFile","bind","handleChange","addRoaster","notify","post","then","resp","console","log","e","files","target","setState","length","reader","FileReader","rABS","readAsBinaryString","onload","bstr","result","wb","read","type","bookVBA","wsname","SheetNames","ws","Sheets","utils","sheet_to_json","JSON","stringify","readAsArrayBuffer","render","color","width","marginLeft","marginTop","mapStateToProps","ownProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import { Fabric } from 'office-ui-fabric-react/lib/Fabric';\n//import { DefaultButton } from 'office-ui-fabric-react/lib/Button';\nimport XLSX from 'xlsx';\nimport { make_cols } from './make-columns';\nimport { SheetJSFT } from './types';\nimport {connect} from \"react-redux\";\n//import {Dashboard} from \"../assignment/assignment\";\n//import {appSelectFilteredZones, appSelectNotifications} from \"../../modals/app/selectors\";\n//import {appFetchAllEquipments, appFetchZonesData, zoneFecthWIPdetails, zoneScheduleWIP} from \"../../modals/app/thunk\";\n//import {appSetZonesFilter} from \"../../modals/app/actions\";\nimport {addRoasters, fetchRoasters} from \"../../modals/roaster/roaster-service\";\nimport axios from 'axios';\nimport { appShowPushNotification } from \"../../modals/app/thunk\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nclass ExcelReader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: {},\n            data: [],\n            cols: []\n        }\n        this.handleFile = this.handleFile.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.addRoaster = this.addRoaster.bind(this);\n        this.notify = this.notify.bind(this);\n    }\n    \n    notify()\n    {\n        toast(\"Please select a file !\");\n    }\n\taddRoaster(data){\n\t\t\n\t\taxios.post('https://xlnlyl43dd.execute-api.ap-south-1.amazonaws.com/dev/addroster',data).then(resp => {\n\n\t\tconsole.log(resp.data);\n\n\t});\n\t}\n\n    handleChange(e) {\n        const files = e.target.files;\n        if (files && files[0]) this.setState({ file: files[0] });\n    };\n\n    handleFile() {\n        if(this.state.file.length > 0)\n        {\n        /* Boilerplate to set up FileReader */\n        const reader = new FileReader();\n        const rABS = !!reader.readAsBinaryString;\n\n        reader.onload = (e) => {\n            /* Parse data */\n            const bstr = e.target.result;\n            const wb = XLSX.read(bstr, { type: rABS ? 'binary' : 'array', bookVBA : true });\n            /* Get first worksheet */\n            const wsname = wb.SheetNames[0];\n            const ws = wb.Sheets[wsname];\n            /* Convert array of arrays */\n            const data = XLSX.utils.sheet_to_json(ws);\n            /* Update state */\n            this.setState({ data: data, cols: make_cols(ws['!ref']) }, () => {\n                 /* console.log('FUN ', JSON.stringify(this.state.data, null, 2));\n             addRoasters(JSON.stringify(this.state.data, null, 2));*/\n\t\t\t   this.addRoaster(JSON.stringify(this.state.data, null, 2));\n\t\t\t    console.log('FUN ', JSON.stringify(this.state.data, null, 2));\n            });\n\n        };\n\n        if (rABS) {\n            reader.readAsBinaryString(this.state.file);\n        } else {\n            reader.readAsArrayBuffer(this.state.file);\n        };\n    }\n    else {\n        this.notify();\n       \n    }\n    }\n\n    render() {\n        return (\n            <div >\n                <input style = {{color:\"black\",width:\"20%\",marginLeft:\"60%\",marginTop:\"0px\"}} type=\"file\" className=\"form-control\" id=\"file\" accept={SheetJSFT} onChange={this.handleChange} />\n                <input style = {{marginLeft:\"85%\",marginTop:\"-35px\"}} type='submit' value=\"Submit\" onClick={this.handleFile} />\n                <ToastContainer \n        >\n           </ToastContainer>\n            </div>\n\n        )\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n\n});\n\nconst mapDispatchToProps = {\n    fetchRoasters: fetchRoasters\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ExcelReader);"]},"metadata":{},"sourceType":"module"}