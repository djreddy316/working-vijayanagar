{"ast":null,"code":"var _jsxFileName = \"D:\\\\vijayanagar-working\\\\working-vijayanagar\\\\src\\\\components\\\\assignment\\\\assignment.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport Typography from '@material-ui/core/Typography';\nimport \"./assignment.css\";\nimport Button from '@material-ui/core/Button'; //import Card from \"./card/Card\";\n\nimport Spinner from \"../common/Spinner\";\nimport { loadDashboardData } from \"../../redux/actions/dashboardAction\";\nimport BarMapZone from \"../BarMapZone/BarMapZone\";\nimport BarDefaultSMS from \"../BarDefaultSMS/BarDefaultSMS\";\nimport BarAddSearch from \"../BarAddSearch/BarAddSearch\";\nimport { DashboardSection, ZoneOptions, AddZoneWrapper, AddButton, MapImage, MainMapView } from \"./styles\";\nimport { appFetchAllEquipments, appFetchZonesData, zoneScheduleWIP, zoneFecthWIPdetails } from \"../../modals/app/thunk\";\nimport SearchBar from \"../common/searchBar\";\nimport { appSelectFilteredZones, appSelectNotifications } from \"../../modals/app/selectors\";\nimport { appSetZonesFilter } from \"../../modals/app/actions\";\nimport { goToZoneSelectionPage } from \"../../Utils/navigationUtils\";\nimport Map from \"../assets/Plant-map.jpg\";\nimport { isEmpty } from \"lodash\";\nimport { selectUsers } from \"../../modals/userManagement/selectors\";\nimport RoasterTable from \"../common/roasterTable\";\nimport { fetchRoasters, addRoasters } from \"../../modals/roaster/roaster-service\";\nconst useStyles = makeStyles(theme => ({\n  button: {\n    display: 'block',\n    marginTop: theme.spacing(2)\n  },\n  formControl: {\n    margin: theme.spacing(1),\n    maxWidth: 200\n  }\n}));\nexport function Dashboard({\n  fetchEquipment,\n  fetchZones,\n  setSearchFilter,\n  zones,\n  history,\n  createWIP,\n  getWipDetails,\n  fetchRoasters,\n  roasters,\n  addRoasters\n}) {\n  const [schedulingZone, setSechudulingZone] = useState({});\n  const [equipments, setEquipments] = useState([]);\n  const [isMapView, setIsMapView] = useState(false);\n  const classes = useStyles();\n\n  const fetchREquiredData = async () => {\n    fetchZones();\n    const {\n      data: equipments\n    } = await fetchEquipment();\n    setEquipments(equipments);\n  };\n\n  const searchFilter = text => {\n    setSearchFilter(text);\n  };\n\n  useEffect(() => {\n    fetchREquiredData();\n  }, []);\n\n  if (roasters && roasters.roasters.length === 0) {\n    fetchRoasters();\n  }\n\n  console.log('rrr', roasters);\n\n  const invokeAction = actionType => {\n    console.log('action type', actionType);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    style: {\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, \" Roster Management \"), /*#__PURE__*/React.createElement(DashboardSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(RoasterTable, {\n    rowData: roasters.roasters,\n    requiredElements: [\"yardname\", \"employeeid\", \"shift\", \"date\", \"firstname\", \"lastname\", \"biometricnumber\"],\n    columnsElements: [\"Yard\", \"Employee ID\", \"Shift\", \"Date\", \"First Name\", \"Last Name\", \"Biometric Number\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  })));\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  zones: appSelectFilteredZones(state),\n  notifications: appSelectNotifications(state),\n  apiCallsInProgress: state.apiCallsInProgress,\n  roasters: state.roasters\n});\n\nconst mapDispatchToProps = {\n  fetchZones: appFetchZonesData,\n  fetchEquipment: appFetchAllEquipments,\n  setSearchFilter: appSetZonesFilter,\n  createWIP: zoneScheduleWIP,\n  getWipDetails: zoneFecthWIPdetails,\n  fetchRoasters: fetchRoasters,\n  addRoasters: addRoasters\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["D:/vijayanagar-working/working-vijayanagar/src/components/assignment/assignment.js"],"names":["React","useEffect","useState","connect","AddCircleOutlineIcon","makeStyles","InputLabel","MenuItem","FormControl","Select","Typography","Button","Spinner","loadDashboardData","BarMapZone","BarDefaultSMS","BarAddSearch","DashboardSection","ZoneOptions","AddZoneWrapper","AddButton","MapImage","MainMapView","appFetchAllEquipments","appFetchZonesData","zoneScheduleWIP","zoneFecthWIPdetails","SearchBar","appSelectFilteredZones","appSelectNotifications","appSetZonesFilter","goToZoneSelectionPage","Map","isEmpty","selectUsers","RoasterTable","fetchRoasters","addRoasters","useStyles","theme","button","display","marginTop","spacing","formControl","margin","maxWidth","Dashboard","fetchEquipment","fetchZones","setSearchFilter","zones","history","createWIP","getWipDetails","roasters","schedulingZone","setSechudulingZone","equipments","setEquipments","isMapView","setIsMapView","classes","fetchREquiredData","data","searchFilter","text","length","console","log","invokeAction","actionType","color","mapStateToProps","state","ownProps","notifications","apiCallsInProgress","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./assignment.css\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\n\r\n//import Card from \"./card/Card\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { loadDashboardData } from \"../../redux/actions/dashboardAction\";\r\n\r\nimport BarMapZone from \"../BarMapZone/BarMapZone\";\r\nimport BarDefaultSMS from \"../BarDefaultSMS/BarDefaultSMS\";\r\nimport BarAddSearch from \"../BarAddSearch/BarAddSearch\";\r\nimport {\r\n  DashboardSection,\r\n  ZoneOptions,\r\n  AddZoneWrapper,\r\n  AddButton,\r\n  MapImage,\r\n  MainMapView,\r\n} from \"./styles\";\r\nimport {\r\n  appFetchAllEquipments,\r\n  appFetchZonesData,\r\n  zoneScheduleWIP,\r\n  zoneFecthWIPdetails,\r\n} from \"../../modals/app/thunk\";\r\nimport SearchBar from \"../common/searchBar\";\r\nimport {\r\n  appSelectFilteredZones,\r\n  appSelectNotifications,\r\n} from \"../../modals/app/selectors\";\r\nimport { appSetZonesFilter } from \"../../modals/app/actions\";\r\nimport { goToZoneSelectionPage } from \"../../Utils/navigationUtils\";\r\nimport Map from \"../assets/Plant-map.jpg\";\r\nimport { isEmpty } from \"lodash\";\r\nimport {selectUsers} from \"../../modals/userManagement/selectors\";\r\nimport RoasterTable from \"../common/roasterTable\";\r\nimport {fetchRoasters,addRoasters} from \"../../modals/roaster/roaster-service\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  button: {\r\n    display: 'block',\r\n    marginTop: theme.spacing(2),\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    maxWidth: 200,\r\n  },\r\n}));\r\n\r\n\r\nexport function Dashboard({\r\n  fetchEquipment,\r\n  fetchZones,\r\n  setSearchFilter,\r\n  zones,\r\n  history,\r\n  createWIP,\r\n  getWipDetails,\r\n  fetchRoasters,\r\n  roasters,\r\n  addRoasters\r\n}) {\r\n  const [schedulingZone, setSechudulingZone] = useState({});\r\n  const [equipments, setEquipments] = useState([]);\r\n  const [isMapView, setIsMapView] = useState(false);\r\n\tconst classes = useStyles();\r\n  const fetchREquiredData = async () => {\r\n    fetchZones();\r\n    const { data: equipments } = await fetchEquipment();\r\n    setEquipments(equipments);\r\n  };\r\n\r\n  const searchFilter = (text) => {\r\n    setSearchFilter(text);\r\n  };\r\n\t\r\n \r\n  useEffect(() => {\r\n    fetchREquiredData();\r\n  }, []);\r\n\r\n  if(roasters && roasters.roasters.length === 0) {\r\n    fetchRoasters();\r\n  }\r\n\r\n  console.log('rrr', roasters);\r\n\r\n  const invokeAction = (actionType) => {\r\n    console.log('action type', actionType);\r\n  };\r\n\r\n  return (\r\n  <div>\r\n    <h1 style = {{color:'white'}}> Roster Management </h1>\r\n    <DashboardSection>\r\n      <RoasterTable\r\n          rowData={roasters.roasters}\r\n          requiredElements={[\r\n            \"yardname\",\r\n            \"employeeid\",\r\n            \"shift\",\r\n            \"date\",\r\n\t\t\t\"firstname\",\r\n\t\t\t\"lastname\",\r\n\t\t\t\"biometricnumber\"\r\n          ]}\r\n          columnsElements={[\r\n            \"Yard\",\r\n            \"Employee ID\",\r\n            \"Shift\",\r\n            \"Date\",\r\n\t\t\t\"First Name\",\r\n\t\t\t\"Last Name\",\r\n\t\t\t\"Biometric Number\"\r\n          ]}\r\n      />\r\n    </DashboardSection>\r\n\t</div>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  zones: appSelectFilteredZones(state),\r\n  notifications: appSelectNotifications(state),\r\n  apiCallsInProgress: state.apiCallsInProgress,\r\n  roasters: state.roasters\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  fetchZones: appFetchZonesData,\r\n  fetchEquipment: appFetchAllEquipments,\r\n  setSearchFilter: appSetZonesFilter,\r\n  createWIP: zoneScheduleWIP,\r\n  getWipDetails: zoneFecthWIPdetails,\r\n  fetchRoasters: fetchRoasters,\r\n  addRoasters:addRoasters\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}