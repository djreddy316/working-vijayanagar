{"ast":null,"code":"var _jsxFileName = \"D:\\\\vijayanagar-working\\\\working-vijayanagar\\\\src\\\\components\\\\dashboard\\\\dashboard.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\"; //import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card'; //import CardActions from '@material-ui/core/CardActions';\n\nimport CardContent from '@material-ui/core/CardContent'; //import Button from '@material-ui/core/Button';\n\nimport Typography from '@material-ui/core/Typography';\nimport \"./dashboard.css\"; //import Clock from 'react-digital-clock';\n//import { Link } from \"react-router-dom\";\n//import Login from '../login/login'\n//import Card from \"./card/Card\";\n\nimport Spinner from \"../common/Spinner\";\nimport { loadDashboardData } from \"../../redux/actions/dashboardAction\";\nimport axios from 'axios';\nimport { DashboardSection // ZoneOptions,\n// AddZoneWrapper,\n// AddButton,\n// MapImage,\n//MainMapView,\n} from \"./styles\";\n/* import {\r\n  appFetchAllEquipments,\r\n  appFetchZonesData,\r\n  zoneScheduleWIP,\r\n  zoneFecthWIPdetails,\r\n} from \"../../modals/app/thunk\"; */\n\n/* import SearchBar from \"../common/searchBar\";\r\nimport {\r\n  appSelectFilteredZones,\r\n  appSelectNotifications,\r\n} from \"../../modals/app/selectors\";\r\nimport { appSetZonesFilter } from \"../../modals/app/actions\";\r\nimport { goToZoneSelectionPage } from \"../../Utils/navigationUtils\";\r\nimport Map from \"../assets/Plant-map.jpg\"; */\n\nimport { isEmpty } from \"lodash\";\nconst header = {\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"x-api-key\": `${process.env.REACT_APP_API_KEY}`\n  }\n};\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)'\n  },\n  title: {\n    fontSize: 14\n  },\n  pos: {\n    marginBottom: 12\n  }\n});\nexport function Dashboard({\n  //fetchEquipment,\n  //fetchZones,\n  setSearchFilter,\n  //zones,\n  history //createWIP,\n  //getWipDetails,\n\n}) {\n  const [time, setTime] = useState();\n  const [localvalue, setLocalvalue] = useState(\"\");\n  const classes = useStyles();\n  const [yard, setYard] = useState([]);\n\n  const fetchREquiredData = async () => {\n    axios.get('https://7fidxh52z5.execute-api.ap-south-1.amazonaws.com/prod/getyardsall', header).then(res => {\n      setYard(res.data.data);\n      console.log(res.data.data);\n    });\n  };\n\n  const searchFilter = text => {\n    setSearchFilter(text);\n  };\n\n  useEffect(() => {\n    if (localStorage.getItem(\"role_id\") == undefined) history.push(\"/login\");else setLocalvalue(localStorage.getItem(\"role_id\"));\n  }, []);\n  useEffect(() => {\n    fetchREquiredData();\n    const interval = setInterval(() => {\n      fetchREquiredData();\n      setTime(Date());\n      console.log(\"YARD :\", yard);\n    }, 60000);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"white\",\n      marginLeft: \"65%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 3\n    }\n  }, time, \" \"), yard && yard.map(row => {\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        marginLeft: '35%',\n        marginTop: '20px',\n        padding: '20px',\n        width: '450px',\n        background: 'azure'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      style: {\n        textAlign: 'center'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h5\",\n      component: \"h2\",\n      style: {\n        paddingBottom: \"30px\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }\n    }, \"Yard : \", row.name), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      style: {\n        fontWeight: \"500\",\n        fontSize: \"16px\",\n        marginBottom: \"20px\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 8\n      }\n    }, \"Total Planned loading - Batches [\", row.sapbatch, \"]   Wagons [\", row.sapwagon, \"]\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      style: {\n        fontWeight: \"500\",\n        fontSize: \"16px\",\n        marginBottom: \"20px\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"60px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }, \"Total Scanned -  Batches [\", row.scannedbatch, \"]  Wagons [\", row.scannedwagon, \"] \")), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      component: \"p\",\n      style: {\n        fontWeight: \"500\",\n        fontSize: \"16px\",\n        marginBottom: \"20px\",\n        color: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: \"35px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 11\n      }\n    }, \" Pending for Scan - Batches [\", row.sapbatch - row.scannedbatch, \"] Wagons [\", row.sapwagon - row.scannedwagon, \"] \"))));\n  }));\n}\n\nconst mapStateToProps = (state, ownProps) => ({});\n\nconst mapDispatchToProps = {};\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["D:/vijayanagar-working/working-vijayanagar/src/components/dashboard/dashboard.js"],"names":["React","useEffect","useState","connect","makeStyles","Card","CardContent","Typography","Spinner","loadDashboardData","axios","DashboardSection","isEmpty","header","headers","Accept","process","env","REACT_APP_API_KEY","useStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","Dashboard","setSearchFilter","history","time","setTime","localvalue","setLocalvalue","classes","yard","setYard","fetchREquiredData","get","then","res","data","console","log","searchFilter","text","localStorage","getItem","undefined","push","interval","setInterval","Date","color","marginLeft","map","row","marginTop","padding","width","background","textAlign","paddingBottom","name","fontWeight","sapbatch","sapwagon","scannedbatch","scannedwagon","mapStateToProps","state","ownProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n//import AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\n//import CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\n//import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport \"./dashboard.css\";\r\n//import Clock from 'react-digital-clock';\r\n//import { Link } from \"react-router-dom\";\r\n//import Login from '../login/login'\r\n//import Card from \"./card/Card\";\r\nimport Spinner from \"../common/Spinner\";\r\nimport { loadDashboardData } from \"../../redux/actions/dashboardAction\";\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  DashboardSection,\r\n // ZoneOptions,\r\n // AddZoneWrapper,\r\n // AddButton,\r\n // MapImage,\r\n  //MainMapView,\r\n} from \"./styles\";\r\n/* import {\r\n  appFetchAllEquipments,\r\n  appFetchZonesData,\r\n  zoneScheduleWIP,\r\n  zoneFecthWIPdetails,\r\n} from \"../../modals/app/thunk\"; */\r\n/* import SearchBar from \"../common/searchBar\";\r\nimport {\r\n  appSelectFilteredZones,\r\n  appSelectNotifications,\r\n} from \"../../modals/app/selectors\";\r\nimport { appSetZonesFilter } from \"../../modals/app/actions\";\r\nimport { goToZoneSelectionPage } from \"../../Utils/navigationUtils\";\r\nimport Map from \"../assets/Plant-map.jpg\"; */\r\nimport { isEmpty } from \"lodash\";\r\n\r\nconst header = {\r\n  headers: {\r\n    Accept: \"application/json\",\r\n    \"Content-Type\": \"application/json\",\r\n    \"x-api-key\" : `${process.env.REACT_APP_API_KEY}`,\r\n  } \r\n};   \r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    minWidth: 275,\r\n  },\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n});\r\n\r\n\r\nexport function Dashboard({\r\n  //fetchEquipment,\r\n  //fetchZones,\r\n  setSearchFilter,\r\n  //zones,\r\n  history,\r\n  //createWIP,\r\n  //getWipDetails,\r\n}) {\r\n\r\n\tconst [time,setTime] = useState();\r\n\tconst [localvalue, setLocalvalue] = useState(\"\");\r\n  const classes = useStyles();\r\n  const [yard,setYard] = useState([]);\r\n\r\n  const fetchREquiredData = async () => {\r\n    axios.get('https://7fidxh52z5.execute-api.ap-south-1.amazonaws.com/prod/getyardsall',header)\r\n    .then(res=>{\r\n      setYard(res.data.data);\r\n      console.log(res.data.data);\r\n    })\r\n  };\r\n\r\n  const searchFilter = (text) => {\r\n    setSearchFilter(text);\r\n  };\r\n\r\n  useEffect( () => {\r\n\t  if(localStorage.getItem(\"role_id\")  == undefined)\r\n\t\thistory.push(\"/login\")\r\n\telse\r\n      setLocalvalue(localStorage.getItem(\"role_id\") );\r\n   }, []);\r\n  \r\n  useEffect(() => {\r\n    fetchREquiredData();\r\n\tconst interval = setInterval(() => {\r\n    fetchREquiredData();\r\n    setTime(Date());\r\n    console.log(\"YARD :\",yard);\r\n  }, 60000);\r\n\t\r\n  }, []);\r\n\r\n   return (\r\n  <div>\r\n  <p style = {{color:\"white\",marginLeft:\"65%\"}}>{time} </p>\r\n{ yard &&\r\n ( yard.map((row) => {\r\n  return (\r\n<Card style = {{ marginLeft:'35%',marginTop:'20px',padding:'20px',width:'450px',background:'azure'}}>\r\n      <CardContent style = {{textAlign :'center'}}>\r\n       \r\n        <Typography variant=\"h5\" component=\"h2\" style = {{paddingBottom : \"30px\",color:\"black\"}}>\r\n         Yard : {row.name}\r\n         </Typography>\r\n       <Typography variant=\"body2\" component=\"p\" style = {{fontWeight : \"500\",fontSize:\"16px\",marginBottom:\"20px\",color:\"black\"}}>\r\n\t\t Total Planned loading - Batches [{row.sapbatch}]   Wagons [{row.sapwagon}]\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\" style = {{fontWeight : \"500\",fontSize:\"16px\",marginBottom:\"20px\",color:\"black\"}}>\r\n          <div style = {{marginLeft : \"60px\"}}>Total Scanned -  Batches [{row.scannedbatch}]  Wagons [{row.scannedwagon}] </div>\r\n        </Typography>\r\n\t\t<Typography variant=\"body2\" component=\"p\" style = {{fontWeight : \"500\",fontSize:\"16px\",marginBottom:\"20px\",color:\"black\"}}>\r\n          <div style = {{marginLeft : \"35px\"}}> Pending for Scan - Batches [{row.sapbatch - row.scannedbatch}] Wagons [{row.sapwagon - row.scannedwagon}] </div>\r\n        </Typography>\r\n      </CardContent>\r\n     \r\n    </Card>\r\n  )\r\n} \r\n))\r\n}\r\n\t</div>\r\n  ); \r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n \r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  \r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}